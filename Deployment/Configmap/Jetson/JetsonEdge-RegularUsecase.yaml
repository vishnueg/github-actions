apiVersion: v1
kind: ConfigMap
metadata:
  name: jetson-edge-regular-usecase
  namespace: squirrel-operator
data:
  usecase.sh: |
    #!/bin/bash
    echo "************************************ Executing usecase.sh ***************************************************"
    USECASE=$(cat /usr/bin/my-usecase.txt | awk -F: '{print $3}' |sed 's/"//g '| sed s/\}//)
    echo "My usecase is " $USECASE
    cp /root/*-uc/cp-cam-images.sh  /home/nvidia/
    chmod a+x /home/nvidia/cp-cam-images.sh 
    echo "Copied cp-cam-images.sh to /home/nvidia/"
    sed -i 's/usecase/checkMyUsecase/' /var/spool/cron/crontabs/root
    echo "Updated cron-root"
    su -c 'echo "*/5 6-20 * * 1-6 ~/cp-cam-images.sh | tee -a /tmp/cam-copy.log" >> /var/spool/cron/crontabs/nvidia' nvidia
    echo "Switched to nvidia and updated the cron-nvidia"
    echo "************************************ Successfully completed usecase.sh ***************************************************"

  # health check script
  issue: |
    ###################################################
    #                                                 #
    #                                                 #
    #               Hello World !!!                   #
    #             I am your SMART EDGE                #
    #                                                 #
    #              				 	                          #
    ###################################################

    ██╗░░██╗░█████╗░██████╗░██████╗░██╗░░░██╗  ██╗░░██╗░█████╗░░█████╗░██╗░░██╗██╗███╗░░██╗░██████╗░
    ██║░░██║██╔══██╗██╔══██╗██╔══██╗╚██╗░██╔╝  ██║░░██║██╔══██╗██╔══██╗██║░██╔╝██║████╗░██║██╔════╝░
    ███████║███████║██████╔╝██████╔╝░╚████╔╝░  ███████║███████║██║░░╚═╝█████═╝░██║██╔██╗██║██║░░██╗░
    ██╔══██║██╔══██║██╔═══╝░██╔═══╝░░░╚██╔╝░░  ██╔══██║██╔══██║██║░░██╗██╔═██╗░██║██║╚████║██║░░╚██╗
    ██║░░██║██║░░██║██║░░░░░██║░░░░░░░░██║░░░  ██║░░██║██║░░██║╚█████╔╝██║░╚██╗██║██║░╚███║╚██████╔╝
    ╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░░░░╚═╝░░░░░░░░╚═╝░░░  ╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░

  cp-cam-images.sh : |
    #!/bin/bash
    HOMEDIR=nvidia
    DATE=$(date +"%Y-%m-%d_%H%M")
    SRCDIR=$HOME/sq_home_edge01
    # Create the camera folders if they don't exists
    for i in `grep esp32 /etc/health/cameras.info | awk '{print $2}'` ; do
      if [ -d "$HOME/sq_home_edge01/$HOSTNAME/$i" ]; then
        echo "Directory exists for $i"
      else
        mkdir -p $HOME/sq_home_edge01/$HOSTNAME/$i  
      fi
    done
    # Capture the camera image and store to the local path
    for i in `grep esp32 /etc/health/cameras.info | awk '{print $2}'` ; do
      ip=`grep $i /etc/health/cameras.info |awk '{print $1}'`
      curl -m 40 -o $SRCDIR/$HOSTNAME/$i/latest.jpg $ip/capture 
      sleep 2
    done
    find $SRCDIR/$HOSTNAME -type f -size -100k -exec ls -lh {} \; | tee -a /var/tmp/cam-copy.log
    find $SRCDIR/$HOSTNAME -type f -size -100k -exec rm {} \;
    # Get the Public IP list from Teleport Server
    scp -i ~/.ssh/raspi-cp-privkey -P 2222 nvidia@fcftport.northeurope.cloudapp.azure.com:/tmp/public.ip /tmp
    # Generate a file with the list(For which SSH works) of IPs
    ./ssh-check.sh |grep SSH_OK |  awk '{print $1}' > public.ip.ref 
    # Get the first IP from the list
    SSHEDGE=`head -1 public.ip.ref`
    # Copy inages to the remote Jetson
    scp -pr -i ~/.ssh/raspi-cp-privkey -P 2222 $SRCDIR/$HOSTNAME nvidia@$SSHEDGE:/home/nvidia/sq_home_edge01/
    # Remove the Store Folder
    cd $SRCDIR/
    rm -rf $HOSTNAME
    # Output the details to /var/tmp/cam-copy.log
    echo "Images copied to $SSHEDGE at $DATE" >> /var/tmp/cam-copy.log

  clean-my-usecase.sh: |
    echo "Cleaning ....."
    echo "remove cp-cam-images.sh"
    rm -rf /home/nvidia/cp-cam-images.sh 
    echo "remove cp-cam-images.sh from cron"
    sed --in-place '/cp-cam-images.sh/d' /var/spool/cron/crontabs/nvidia